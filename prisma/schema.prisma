generator client {
  provider = "prisma-kysely"
  output   = "../src/db"
  fileName = "types.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

enum UserRoleType {
  SUPER_ADMIN
  ADMIN
  USER
}

model users {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  updated_at DateTime     @default(now()) @db.Timestamptz(6)
  deleted_at DateTime?    @db.Timestamptz(6)
  first_name String?
  last_name  String?
  email      String       @unique
  role       UserRoleType @default(USER)

  // Relations
  products products[]

  // Indexes
  @@index([created_at])
  @@index([updated_at])
  @@index([deleted_at])
  @@index([first_name])
  @@index([last_name])
  @@index([email])
}

model feature_flags {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  updated_at DateTime     @default(now()) @db.Timestamptz(6)
  deleted_at DateTime?    @db.Timestamptz(6)
  role       UserRoleType
  json       Json

  // Unique constraints
  @@unique([role])
  // Indexes
  @@index([created_at])
  @@index([updated_at])
  @@index([deleted_at])
  @@index([role])
}

model products {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  name        String
  description String?
  price       Float

  // Foreign Keys
  user_id String @db.Uuid

  // Relations
  user users @relation(fields: [user_id], references: [id], onDelete: Cascade)

  // Indexes
  @@index([created_at])
  @@index([updated_at])
  @@index([deleted_at])
  @@index([name])
  @@index([price])
  @@index([user_id])
}
